{
  "manifest": {
    "name": "@azure/abort-controller",
    "sdk-type": "client",
    "version": "1.1.0",
    "description": "Microsoft Azure SDK for JavaScript - Aborter",
    "main": "./dist/index.js",
    "module": "dist-esm/src/index.js",
    "scripts": {
      "audit": "node ../../../common/scripts/rush-audit.js && rimraf node_modules package-lock.json && npm i --package-lock-only 2>&1 && npm audit",
      "build:samples": "echo Obsolete",
      "build:test": "tsc -p . && dev-tool run bundle",
      "build:types": "downlevel-dts types/src types/3.1",
      "build": "npm run clean && tsc -p . && dev-tool run bundle && api-extractor run --local && npm run build:types",
      "check-format": "prettier --list-different --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.ts\" \"test/**/*.ts\" \"*.{js,json}\"",
      "clean": "rimraf dist dist-* temp types *.tgz *.log",
      "execute:samples": "echo skipped",
      "extract-api": "tsc -p . && api-extractor run --local",
      "format": "prettier --write --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.ts\" \"test/**/*.ts\" \"*.{js,json}\"",
      "integration-test:browser": "echo skipped",
      "integration-test:node": "echo skipped",
      "integration-test": "npm run integration-test:node && npm run integration-test:browser",
      "lint:fix": "eslint package.json api-extractor.json src test --ext .ts --fix --fix-type [problem,suggestion]",
      "lint": "eslint package.json api-extractor.json src test --ext .ts",
      "pack": "npm pack 2>&1",
      "test:browser": "npm run clean && npm run build:test && npm run unit-test:browser && npm run integration-test:browser",
      "test:node": "npm run clean && tsc -p . && npm run unit-test:node && npm run integration-test:node",
      "test": "npm run clean && tsc -p . && npm run unit-test:node && dev-tool run bundle && npm run unit-test:browser && npm run integration-test",
      "unit-test:browser": "karma start --single-run",
      "unit-test:node": "mocha -r esm -r ts-node/register --reporter ../../../common/tools/mocha-multi-reporter.js --timeout 1200000 --full-trace  --exclude \"test/**/browser/*.spec.ts\" \"test/**/*.spec.ts\"",
      "unit-test": "npm run unit-test:node && npm run unit-test:browser"
    },
    "types": "./types/src/index.d.ts",
    "typesVersions": {
      "<3.6": {
        "types/src/*": [
          "types/3.1/*"
        ]
      }
    },
    "files": [
      "dist/",
      "dist-esm/src/",
      "shims-public.d.ts",
      "types/src",
      "types/3.1",
      "README.md",
      "LICENSE"
    ],
    "engines": {
      "node": ">=12.0.0"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/Azure/azure-sdk-for-js.git"
    },
    "keywords": [
      "azure",
      "aborter",
      "abortsignal",
      "cancellation",
      "node.js",
      "typescript",
      "javascript",
      "browser",
      "cloud"
    ],
    "author": {
      "name": "Microsoft Corporation"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/Azure/azure-sdk-for-js/issues"
    },
    "homepage": "https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/core/abort-controller/README.md",
    "sideEffects": false,
    "dependencies": {
      "tslib": "^2.2.0"
    },
    "devDependencies": {
      "@azure/dev-tool": "^1.0.0",
      "@azure/eslint-plugin-azure-sdk": "^3.0.0",
      "@microsoft/api-extractor": "7.18.11",
      "@types/chai": "^4.1.6",
      "@types/mocha": "^7.0.2",
      "@types/node": "^12.0.0",
      "chai": "^4.2.0",
      "cross-env": "^7.0.2",
      "downlevel-dts": "^0.8.0",
      "eslint": "^7.15.0",
      "karma": "^6.2.0",
      "karma-chrome-launcher": "^3.0.0",
      "karma-coverage": "^2.0.0",
      "karma-edge-launcher": "^0.4.2",
      "karma-env-preprocessor": "^0.1.1",
      "karma-firefox-launcher": "^1.1.0",
      "karma-ie-launcher": "^1.0.0",
      "karma-junit-reporter": "^2.0.1",
      "karma-mocha": "^2.0.1",
      "karma-mocha-reporter": "^2.2.5",
      "karma-sourcemap-loader": "^0.3.8",
      "mocha": "^7.1.1",
      "mocha-junit-reporter": "^2.0.0",
      "nyc": "^15.0.0",
      "prettier": "^2.5.1",
      "rimraf": "^3.0.0",
      "ts-node": "^10.0.0",
      "typescript": "~4.6.0"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-@azure-abort-controller-1.1.0-788ee78457a55af8a1ad342acb182383d2119249-integrity/node_modules/@azure/abort-controller/package.json",
    "readmeFilename": "README.md",
    "readme": "# Azure Abort Controller client library for JavaScript\n\nThe `@azure/abort-controller` package provides `AbortController` and `AbortSignal` classes. These classes are compatible\nwith the [AbortController](https://developer.mozilla.org/docs/Web/API/AbortController) built into modern browsers\nand the `AbortSignal` used by [fetch](https://developer.mozilla.org/docs/Web/API/Fetch_API).\nUse the `AbortController` class to create an instance of the `AbortSignal` class that can be used to cancel an operation\nin an Azure SDK that accept a parameter of type `AbortSignalLike`.\n\nKey links:\n\n- [Source code](https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/core/abort-controller)\n- [Package (npm)](https://www.npmjs.com/package/@azure/abort-controller)\n- [API Reference Documentation](https://docs.microsoft.com/javascript/api/overview/azure/abort-controller-readme)\n\n## Getting started\n\n### Installation\n\nInstall this library using npm as follows\n\n```\nnpm install @azure/abort-controller\n```\n\n## Key Concepts\n\nUse the `AbortController` to create an `AbortSignal` which can then be passed to Azure SDK operations to cancel\npending work. The `AbortSignal` can be accessed via the `signal` property on an instantiated `AbortController`.\nAn `AbortSignal` can also be returned directly from a static method, e.g. `AbortController.timeout(100)`.\nthat is cancelled after 100 milliseconds.\n\nCalling `abort()` on the instantiated `AbortController` invokes the registered `abort`\nevent listeners on the associated `AbortSignal`.\nAny subsequent calls to `abort()` on the same controller will have no effect.\n\nThe `AbortSignal.none` static property returns an `AbortSignal` that can not be aborted.\n\nMultiple instances of an `AbortSignal` can be linked so that calling `abort()` on the parent signal,\naborts all linked signals.\nThis linkage is one-way, meaning that a parent signal can affect a linked signal, but not the other way around.\nTo link `AbortSignals` together, pass in the parent signals to the `AbortController` constructor.\n\n## Examples\n\nThe below examples assume that `doAsyncWork` is a function that takes a bag of properties, one of which is\nof the abort signal.\n\n### Example 1 - basic usage\n\n```js\nimport { AbortController } from \"@azure/abort-controller\";\n\nconst controller = new AbortController();\ndoAsyncWork({ abortSignal: controller.signal });\n\n// at some point later\ncontroller.abort();\n```\n\n### Example 2 - Aborting with timeout\n\n```js\nimport { AbortController } from \"@azure/abort-controller\";\n\nconst signal = AbortController.timeout(1000);\ndoAsyncWork({ abortSignal: signal });\n```\n\n### Example 3 - Aborting sub-tasks\n\n```js\nimport { AbortController } from \"@azure/abort-controller\";\n\nconst allTasksController = new AbortController();\n\nconst subTask1 = new AbortController(allTasksController.signal);\nconst subtask2 = new AbortController(allTasksController.signal);\n\nallTasksController.abort(); // aborts allTasksSignal, subTask1, subTask2\nsubTask1.abort(); // aborts only subTask1\n```\n\n### Example 4 - Aborting with parent signal or timeout\n\n```js\nimport { AbortController } from \"@azure/abort-controller\";\n\nconst allTasksController = new AbortController();\n\n// create a subtask controller that can be aborted manually,\n// or when either the parent task aborts or the timeout is reached.\nconst subTask = new AbortController(allTasksController.signal, AbortController.timeout(100));\n\nallTasksController.abort(); // aborts allTasksSignal, subTask\nsubTask.abort(); // aborts only subTask\n```\n\n## Next steps\n\nYou can build and run the tests locally by executing `rushx test`. Explore the `test` folder to see advanced usage and behavior of the public classes.\n\n## Troubleshooting\n\nIf you run into issues while using this library, please feel free to [file an issue](https://github.com/Azure/azure-sdk-for-js/issues/new).\n\n## Contributing\n\nIf you'd like to contribute to this library, please read the [contributing guide](https://github.com/Azure/azure-sdk-for-js/blob/main/CONTRIBUTING.md) to learn more about how to build and test the code.\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-js%2Fsdk%2Fcore%2Fabort-controller%2FREADME.png)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2020 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@azure/abort-controller/-/abort-controller-1.1.0.tgz#788ee78457a55af8a1ad342acb182383d2119249",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@azure/abort-controller/-/abort-controller-1.1.0.tgz",
    "hash": "788ee78457a55af8a1ad342acb182383d2119249",
    "integrity": "sha512-TrRLIoSQVzfAJX9H1JeFjzAoDGcoK1IYX1UImfceTZpsyYfWr09Ss1aHW1y5TrrR3iq6RZLBwJ3E24uwPhwahw==",
    "registry": "npm",
    "packageName": "@azure/abort-controller",
    "cacheIntegrity": "sha512-TrRLIoSQVzfAJX9H1JeFjzAoDGcoK1IYX1UImfceTZpsyYfWr09Ss1aHW1y5TrrR3iq6RZLBwJ3E24uwPhwahw== sha1-eI7nhFelWvihrTQqyxgjg9IRkkk="
  },
  "registry": "npm",
  "hash": "788ee78457a55af8a1ad342acb182383d2119249"
}