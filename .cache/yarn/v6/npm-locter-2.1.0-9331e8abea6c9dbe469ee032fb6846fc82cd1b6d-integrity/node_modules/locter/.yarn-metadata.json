{
  "manifest": {
    "name": "locter",
    "version": "2.1.0",
    "description": "A library to locate a file/module by criteria and load it!",
    "author": {
      "name": "Peter Placzek",
      "email": "contact@tada5hi.net",
      "url": "https://github.com/tada5hi"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/tada5hi/locter.git"
    },
    "main": "dist/index.cjs",
    "module": "dist/index.mjs",
    "types": "dist/index.d.ts",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "require": "./dist/index.cjs",
        "import": "./dist/index.mjs"
      }
    },
    "files": [
      "dist/"
    ],
    "scripts": {
      "build:types": "tsc --emitDeclarationOnly",
      "build:js": "rollup -c",
      "build": "rimraf dist && npm run build:types && npm run build:js",
      "commit": "npx git-cz",
      "test": "cross-env NODE_ENV=test jest --config ./test/jest.config.js",
      "test:coverage": "cross-env NODE_ENV=test jest --config ./test/jest.config.js --coverage",
      "lint": "eslint --ext .js,.vue,.ts ./src",
      "lint:fix": "npm run lint -- --fix",
      "prepare": "npx husky install"
    },
    "keywords": [
      "file",
      "loader",
      "transpiling",
      "compiler",
      "loading",
      "on-demand-transpiling",
      "locator",
      "file-extension",
      "transpiling",
      "typescript"
    ],
    "license": "MIT",
    "devDependencies": {
      "@rollup/plugin-esm-shim": "^0.1.5",
      "@rollup/plugin-node-resolve": "^15.2.3",
      "@swc/core": "^1.4.11",
      "@swc/jest": "^0.2.36",
      "@tada5hi/commitlint-config": "^1.2.0",
      "@tada5hi/eslint-config-typescript": "^1.2.10",
      "@tada5hi/semantic-release": "^0.3.1",
      "@tada5hi/tsconfig": "^0.5.1",
      "@types/flat": "^5.0.2",
      "@types/jest": "^29.5.12",
      "@types/node": "^20.12.2",
      "cross-env": "^7.0.3",
      "eslint": "^8.57.0",
      "husky": "^9.0.11",
      "jest": "^29.6.4",
      "rimraf": "^5.0.5",
      "rollup": "^4.13.2",
      "semantic-release": "^22.0.8",
      "typescript": "^5.4.3"
    },
    "dependencies": {
      "destr": "^2.0.3",
      "ebec": "^2.3.0",
      "fast-glob": "^3.3.2",
      "flat": "^5.0.2",
      "jiti": "^1.21.0",
      "yaml": "^2.4.1"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-locter-2.1.0-9331e8abea6c9dbe469ee032fb6846fc82cd1b6d-integrity/node_modules/locter/package.json",
    "readmeFilename": "README.MD",
    "readme": "# Locter ðŸ”¥\n\n[![npm version](https://badge.fury.io/js/locter.svg)](https://badge.fury.io/js/locter)\n[![CI](https://github.com/tada5hi/locter/actions/workflows/main.yml/badge.svg)](https://github.com/tada5hi/locter/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/Tada5hi/locter/branch/master/graph/badge.svg?token=4KNSG8L13V)](https://codecov.io/gh/Tada5hi/locter)\n[![Known Vulnerabilities](https://snyk.io/test/github/Tada5hi/locter/badge.svg?targetFile=package.json)](https://snyk.io/test/github/Tada5hi/locter?targetFile=package.json)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-%23FE5196?logo=conventionalcommits&logoColor=white)](https://conventionalcommits.org)\n\nLocter is a library to locate and load a file/modules regarding specific criteria.\n\n**Table of Contents**\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Locator](#locator)\n  - [Loader](#loader)\n- [License](#license)\n\n## Installation\n\n```bash\nnpm install locter --save\n```\n\n## Usage\n\nThe following examples are based on some shared assumptions:\n- A folder named `files` exists in the root directory.\n- The folder `files` contains the following files:\n  - example.js\n  - example.json\n  - example.ts\n  - example-long.ts\n\n\n### Locator\n\n**Multiple**\n\nLocating multiple files will return information about all files matching the pattern.\n\n```typescript\nimport { locateMany } from 'locter';\n\n(async () => {\n    let files = await locateMany(\n        'files/example.{js,.ts}'\n    );\n\n    console.log(files);\n    /*\n    [\n        { path: 'files', name: 'example', extension: '.js'},\n        { path: 'files', name: 'example', extension: '.ts'}\n    ]\n     */\n\n    files = await locateMany(\n        'files/*.{js,ts}'\n    );\n\n    console.log(files);\n    /*\n    [\n        { path: 'files', name: 'example', extension: '.js'},\n        { path: 'files', name: 'example', extension: '.ts'},\n        { path: 'files', name: 'example-long', extension: '.ts'},\n    ]\n     */\n})\n```\n\nA synchronous variant is also available: `locateManySync`\n\n**Single**\n\nLocating a single file will return information about the first file matching the pattern.\n\n```typescript\nimport { locate } from 'locter';\n\n(async () => {\n    let file = await locate(\n        'files/example.{js,.ts}'\n    );\n\n    console.log(file);\n    /*\n    { path: 'files', name: 'example', extension: '.js'}\n     */\n})\n```\n\nA synchronous variant is also available: `locateSync`\n\n### Loader\n\nThe `load` method can be used to load a file/module in an asynchronous fashion.\nEither a string or the output of the locate/locateSync method can be passed as argument.\n\n```typescript\nimport { load, locate } from 'locter';\n\n(async () => {\n    const file = await locate(\n        'files/example.{js,.ts}'\n    );\n\n    let content = await load(file);\n    console.log(content);\n    // ...\n\n    content = await load('...');\n    console.log(content);\n    // ...\n})\n```\n\nThere is also a synchronous method called `loadSync` to load files.\n\n```typescript\nimport { loadSync, locateSync } from 'locter';\n\n(async () => {\n    const file = await locateSync(\n        'files/example.{js,.ts}'\n    );\n\n    let content = await loadSync(file);\n    console.log(content);\n    // ...\n\n    content = await loadSync('...');\n    console.log(content);\n    // ...\n})\n```\n\nTwo loaders are predefined from scratch and already registered:\n- **ConfLoader**: This loader allows to load `.conf` files.\n- **JSONLoader**: This loader allows to load `.json` files.\n- **YAMLLoader**: This loader allows to load `.yml` files.\n- **ModuleLoader**: This loader allows to load modules with\n  `.js`, `.mjs`, `.mts`, `.cjs`, `.cts`, `.ts` file extensions independent of the environment (cjs or esm).\n\nTo register loader for other file types, the function `registerLoader` can be used.\n\n```typescript\nimport { registerLoader } from 'locter';\n\nregisterLoader(['.ext'], {\n    execute(input: string) {\n\n    },\n    executeSync(input: string) {\n\n    }\n})\n```\n\n\n## License\n\nMade with ðŸ’š\n\nPublished under [MIT License](./LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2021-2022 Peter Placzek\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/locter/-/locter-2.1.0.tgz#9331e8abea6c9dbe469ee032fb6846fc82cd1b6d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/locter/-/locter-2.1.0.tgz",
    "hash": "9331e8abea6c9dbe469ee032fb6846fc82cd1b6d",
    "integrity": "sha512-QUPPtb6CQ3hOacDZq2kc6KMzYn9z6r9B2RtFJTBD9nqxmyQJVYnTNZNqY6Z5NcJfwsGEgJLddnfFpofg7EJMDg==",
    "registry": "npm",
    "packageName": "locter",
    "cacheIntegrity": "sha512-QUPPtb6CQ3hOacDZq2kc6KMzYn9z6r9B2RtFJTBD9nqxmyQJVYnTNZNqY6Z5NcJfwsGEgJLddnfFpofg7EJMDg== sha1-kzHoq+psnb5GnuAy+2hG/ILNG20="
  },
  "registry": "npm",
  "hash": "9331e8abea6c9dbe469ee032fb6846fc82cd1b6d"
}