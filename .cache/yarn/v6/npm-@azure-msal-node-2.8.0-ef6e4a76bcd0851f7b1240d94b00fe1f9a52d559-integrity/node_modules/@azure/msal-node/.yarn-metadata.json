{
  "manifest": {
    "$schema": "https://json.schemastore.org/package.json",
    "name": "@azure/msal-node",
    "version": "2.8.0",
    "author": {
      "name": "Microsoft",
      "email": "nugetaad@microsoft.com",
      "url": "https://www.microsoft.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/AzureAD/microsoft-authentication-library-for-js.git"
    },
    "description": "Microsoft Authentication Library for Node",
    "keywords": [
      "js",
      "ts",
      "node",
      "AAD",
      "msal",
      "oauth"
    ],
    "type": "module",
    "module": "dist/index.mjs",
    "types": "dist/index.d.ts",
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "module": "./dist/index.mjs",
        "import": "./dist/index.mjs",
        "require": "./dist/index.cjs",
        "default": "./dist/index.mjs"
      },
      "./package.json": "./package.json"
    },
    "files": [
      "dist",
      "src"
    ],
    "scripts": {
      "build": "npm run clean && rollup -c --strictDeprecations --bundleConfigAsCjs",
      "build:watch": "rollup -c --watch --strictDeprecations --bundleConfigAsCjs",
      "clean": "shx rm -rf dist lib",
      "test": "jest",
      "test:watch": "jest --watch",
      "test:coverage": "jest --coverage",
      "lint": "eslint src --ext .ts",
      "lint:fix": "npm run lint -- --fix",
      "build:all": "cd ../.. && npm run build --workspace=@azure/msal-common --workspace=@azure/msal-node",
      "prepack": "npm run build:all",
      "format:check": "prettier --ignore-path .gitignore --check src test",
      "format:fix": "prettier --ignore-path .gitignore --write src test"
    },
    "beachball": {
      "disallowedChangeTypes": [
        "major"
      ]
    },
    "devDependencies": {
      "@microsoft/api-extractor": "^7.19.4",
      "@rollup/plugin-node-resolve": "^15.0.1",
      "@rollup/plugin-typescript": "^11.0.0",
      "@types/jest": "^29.5.0",
      "@types/jsonwebtoken": "^9.0.1",
      "@types/node": "^20.3.1",
      "@types/sinon": "^7.5.0",
      "@types/uuid": "^7.0.0",
      "eslint-config-msal": "file:../.cache/yarn/v6/npm-@azure-msal-node-2.8.0-ef6e4a76bcd0851f7b1240d94b00fe1f9a52d559-integrity/node_modules/shared-configs/eslint-config-msal",
      "jest": "^29.5.0",
      "prettier": "2.8.7",
      "rollup": "^3.20.1",
      "sinon": "^7.5.0",
      "ts-jest": "^29.1.0",
      "tslib": "^1.10.0",
      "typescript": "^4.9.5",
      "yargs": "^17.3.1"
    },
    "dependencies": {
      "@azure/msal-common": "14.10.0",
      "jsonwebtoken": "^9.0.0",
      "uuid": "^8.3.0"
    },
    "engines": {
      "node": ">=16"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-@azure-msal-node-2.8.0-ef6e4a76bcd0851f7b1240d94b00fe1f9a52d559-integrity/node_modules/@azure/msal-node/package.json",
    "readmeFilename": "README.md",
    "readme": "# Microsoft Authentication Library for Node (msal-node)\n\n[![npm version](https://img.shields.io/npm/v/@azure/msal-node.svg?style=flat)](https://www.npmjs.com/package/@azure/msal-node/)\n[![npm version](https://img.shields.io/npm/dm/@azure/msal-node.svg)](https://nodei.co/npm/@azure/msal-node/)\n[![codecov](https://codecov.io/gh/AzureAD/microsoft-authentication-library-for-js/branch/dev/graph/badge.svg?flag=msal-node)](https://codecov.io/gh/AzureAD/microsoft-authentication-library-for-js)\n\n| <a href=\"https://docs.microsoft.com/azure/active-directory/develop/guidedsetups/active-directory-javascriptspa\" target=\"_blank\">Getting Started</a> | <a href=\"https://aka.ms/aaddevv2\" target=\"_blank\">AAD Docs</a> | <a href=\"https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_node.html\" target=\"_blank\">Library Reference</a> |\n| --------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n\n1. [About](#about)\n1. [FAQ](#faq)\n1. [Changelog](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-node/CHANGELOG.md)\n1. [Prerequisites](#prerequisites)\n1. [Installation](#installation)\n1. [Node Version Support](#node-version-support)\n1. [Usage](#usage)\n1. [Samples](#samples)\n1. [Build Library](#build-and-test)\n1. [Security Reporting](#security-reporting)\n1. [License](#license)\n1. [Code of Conduct](#we-value-and-adhere-to-the-microsoft-open-source-code-of-conduct)\n\n## About\n\nMSAL Node enables applications to authenticate users using [Azure AD](https://docs.microsoft.com/azure/active-directory/develop/v2-overview) work and school accounts (AAD), Microsoft personal accounts (MSA) and social identity providers like Facebook, Google, LinkedIn, Microsoft accounts, etc. through [Azure AD B2C](https://docs.microsoft.com/azure/active-directory-b2c/active-directory-b2c-overview#identity-providers) service. It also enables your app to get tokens to access [Microsoft Cloud](https://www.microsoft.com/enterprise) services such as [Microsoft Graph](https://graph.microsoft.io).\n\n### OAuth2.0 grant types supported:\n\nThe current version supports the following ways of acquiring tokens:\n\n#### Public Client:\n\n-   [Authorization Code Grant](https://oauth.net/2/grant-types/authorization-code/) with [PKCE](https://oauth.net/2/pkce/)\n-   [Device Code Grant](https://oauth.net/2/grant-types/device-code/)\n-   [Refresh Token Grant](https://oauth.net/2/grant-types/refresh-token/)\n-   [Silent Flow](https://docs.microsoft.com/azure/active-directory/develop/msal-acquire-cache-tokens#acquiring-tokens-silently-from-the-cache)\n-   [Username and Password flow](https://docs.microsoft.com/azure/active-directory/develop/msal-authentication-flows#usernamepassword)\n\n#### Confidential Client:\n\n-   [Authorization Code Grant](https://oauth.net/2/grant-types/authorization-code/) with a client credential\n-   [Refresh Token Grant](https://oauth.net/2/grant-types/refresh-token/)\n-   [Silent Flow](https://docs.microsoft.com/azure/active-directory/develop/msal-acquire-cache-tokens#acquiring-tokens-silently-from-the-cache)\n-   [Client Credential Grant](https://oauth.net/2/grant-types/client-credentials/)\n-   [On-behalf-of flow](https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow)\n-   [Username and Password flow](https://docs.microsoft.com/azure/active-directory/develop/msal-authentication-flows#usernamepassword)\n\nMore details on different grant types supported by Microsoft authentication libraries in general can be found [here](https://docs.microsoft.com/azure/active-directory/develop/msal-authentication-flows).\n\n### Scenarios supported:\n\nThe scenarios supported with this library are:\n\n-   Desktop app that calls web APIs\n-   Web app that calls web APIs\n-   Web APIs that call web APIs\n-   Daemon apps\n\nMore details on scenarios and the authentication flows that map to each of them can be found [here](https://docs.microsoft.com/azure/active-directory/develop/authentication-flows-app-scenarios).\n\n## FAQ\n\nSee [here](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-node/docs/faq.md).\n\n## Prerequisites\n\nBefore using `@azure/msal-node` you will need to register your app in the azure portal:\n\n-   [App registration](https://docs.microsoft.com/graph/auth-register-app-v2)\n\n## Installation\n\n### Via NPM:\n\n```javascript\nnpm install @azure/msal-node\n```\n\n## Node Version Support\n\nMSAL Node will follow the [Long Term Support (LTS) schedule of the Node.js project](https://nodejs.org/about/releases/). Our support plan is as follows.\n\nAny major MSAL Node release:\n\n-   Will support stable (even-numbered) Maintenance LTS, Active LTS, and Current versions of Node\n-   Will drop support for any previously supported Node versions that have reached end of life\n-   Will not support prerelease/preview/pending versions until they are stable\n\n| MSAL Node version | MSAL support status | Supported Node versions |\n| ----------------- | ------------------- | ----------------------- |\n| 2.x.x             | Active development  | 16, 18, 20, 22          |\n| 1.x.x             | In maintenance      | 10, 12, 14, 16, 18      |\n\n**Note:** There have been no functional changes in the MSAL Node v2 release.\n\n## Usage\n\n### MSAL basics\n\n-   [Understand difference in between Public Client and Confidential Clients](https://docs.microsoft.com/azure/active-directory/develop/msal-client-applications)\n-   [Initialize a Public Client Application](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-node/docs/initialize-public-client-application.md)\n-   [Initialize a Confidential Client Application](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-node/docs/initialize-confidential-client-application.md)\n-   [Configuration](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-node/docs/configuration.md)\n-   [Request](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/request.md)\n-   [Response](https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/Response.md)\n\n## Samples\n\nThere are multiple [samples](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples) included in the repository that use MSAL Node to acquire tokens. These samples are currently used for manual testing, and are not meant to be a reference of best practices, therefore use judgement and do not blindly copy this code to any production applications.\n\nAAD samples:\n\n-   [auth-code](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/auth-code): Express app using OAuth2.0 authorization code flow.\n-   [auth-code-pkce](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/auth-code-pkce): Express app using OAuth2.0 authorization code flow with PKCE.\n-   [device-code](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/device-code): Command line app using OAuth 2.0 device code flow.\n-   [refresh-token](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/refresh-token): Command line app using OAuth 2.0 refresh flow.\n-   [silent-flow](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/silent-flow): Express app using OAuth2.0 authorization code flow to acquire a token and store in the token cache, and silent flow to use tokens in the token cache.\n-   [client-credentials](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/client-credentials): Daemon app using OAuth 2.0 client credential grant to acquire a token.\n-   [on-behalf-of](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/on-behalf-of): Web application using OAuth 2.0 auth code flow to acquire a token for a web API. The web API validates the token, and calls Microsoft Graph on behalf of the user who authenticated in the web application.\n-   [username-password](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/username-password): Web application using OAuth 2.0 resource owner password credentials (ROPC) flow to acquire a token for a web API.\n-   [ElectronTestApp](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/ElectronTestApp): Electron desktop application using OAuth 2.0 auth code with PKCE flow to acquire a token for a web API such as Microsoft Graph.\n-   [Hybrid Spa Sample](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-browser-samples/HybridSample): Sample demonstrating how to use `enableSpaAuthorizationCode` to perform SSO for applications that leverage server-side and client-side authentication using MSAL Browser and MSAL Node.\n\nB2C samples:\n\n-   [b2c-user-flows](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/samples/msal-node-samples/b2c-user-flows): Express app using OAuth2.0 authorization code flow.\n\nOthers:\n\n-   [msal-node-extensions](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/extensions/samples/msal-node-extensions): Uses authorization code flow to acquire tokens and the [msal-extensions](https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/extensions/) library to write the MSAL in-memory token cache to disk.\n\n## Build and Test\n\n```javascript\n// Install dependencies from root of repo\nnpm install\n\n// Change to the msal-node package directory\ncd lib/msal-node\n\n// To run build for common package & node package\nnpm run build:all\n\n// To run build only for node package\nnpm run build\n\n// To run tests\nnpm run test\n```\n\n### Local Development\n\nBelow is a list of commands you will probably find useful:\n\n#### `npm run build:modules:watch`\n\nRuns the project in development/watch mode. Your project will be rebuilt upon changes. TSDX has a special logger for you convenience. Error messages are pretty printed and formatted for compatibility VS Code's Problems tab. The library will be rebuilt if you make edits.\n\n#### `npm run build`\n\nBundles the package to the `dist` folder.\nThe package is optimized and bundled with Rollup into multiple formats (CommonJS, UMD, and ES Module).\n\n#### `npm run build:all`\n\nBuilds both `msal-common` and `msal-node`\n\n#### `npm run lint`\n\nRuns eslint with Prettier\n\n#### `npm test`, `npm run test:coverage`, `npm run test:watch`\n\nRuns the test watcher (Jest) in an interactive mode.\nBy default, runs tests related to files changed since the last commit.\nGenerate code coverage by adding the flag --coverage. No additional setup needed. Jest can collect code coverage information from entire projects, including untested files.\n\n## Security Reporting\n\nIf you find a security issue with our libraries or services please report it to [secure@microsoft.com](mailto:secure@microsoft.com) with as much detail as possible. Your submission may be eligible for a bounty through the [Microsoft Bounty](http://aka.ms/bugbounty) program. Please do not post security issues to GitHub Issues or any other public site. We will contact you shortly upon receiving the information. We encourage you to get notifications of when security incidents occur by visiting [this page](https://technet.microsoft.com/security/dd252948) and subscribing to Security Advisory Alerts.\n\n## License\n\nCopyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License.\n\n## We Value and Adhere to the Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@azure/msal-node/-/msal-node-2.8.0.tgz#ef6e4a76bcd0851f7b1240d94b00fe1f9a52d559",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@azure/msal-node/-/msal-node-2.8.0.tgz",
    "hash": "ef6e4a76bcd0851f7b1240d94b00fe1f9a52d559",
    "integrity": "sha512-YtyRGq11LyHn2OdFoFixdRA5woU2cjkT51fbBznka5jDhcmkwERNRhJllL3tyXBaLcvqJDch8OwKUR4CLRlLWg==",
    "registry": "npm",
    "packageName": "@azure/msal-node",
    "cacheIntegrity": "sha512-YtyRGq11LyHn2OdFoFixdRA5woU2cjkT51fbBznka5jDhcmkwERNRhJllL3tyXBaLcvqJDch8OwKUR4CLRlLWg== sha1-725KdrzQhR97EkDZSwD+H5pS1Vk="
  },
  "registry": "npm",
  "hash": "ef6e4a76bcd0851f7b1240d94b00fe1f9a52d559"
}