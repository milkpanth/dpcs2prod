{
  "manifest": {
    "name": "listenercount",
    "author": {
      "name": "jden",
      "email": "jason@denizac.org"
    },
    "version": "1.0.1",
    "description": "backwards compatible version of builtin events.listenercount",
    "keywords": [
      "eventemitter",
      "events",
      "listener",
      "count",
      "listenercount",
      "polyfill",
      "native",
      "builtin"
    ],
    "main": "index.js",
    "scripts": {
      "test": "standard && mochi"
    },
    "repository": {
      "type": "git",
      "url": "git@github.com:jden/node-listenercount.git"
    },
    "license": "ISC",
    "readmeFilename": "README.md",
    "devDependencies": {
      "mochi": "0.3.0",
      "standard": "^4.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-listenercount-1.0.1-84c8a72ab59c4725321480c975e6508342e70937-integrity/node_modules/listenercount/package.json",
    "readme": "# listenercount\nbackwards compatible version of builtin events.listenercount\n\n[![js standard style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)]()\n\n[![build status](https://circleci.com/gh/jden/node-listenercount.svg?&style=shield)][circleci]\n\n[circleci]: https://circleci.com/gh/jden/node-listenercount\n[standard]: http://standardjs.com/\n\nA polyfill of Node.js 0.12+'s events.listenerCount function for Node.js 0.10. Uses the builtin if present, otherwise uses polyfill implementation.\n\n## usage\n```js\nvar listenerCount = require('listenercount')\nvar EventEmitter = require('events').EventEmitter\n\nvar ee = new EventEmitter()\nee.on('event', function () {})\nlistenerCount(ee, 'event') // => 1\nlistenerCount(ee, 'foo') // => 0\n```\n\n\n## api\n### `listenerCount(ee : EventEmitter, eventName : String) => Number`\nReturns the number of listeners for a given `eventName` on an EventEmitter.\n\n\n## installation\n\n    $ npm install listenercount\n\n\n## running the tests\n\nFrom package root:\n\n    $ npm install\n    $ npm test\n\n\n## contributors\n\n- jden <jason@denizac.org>\n\n\n## license\n\nISC. (c) MMXVI jden <jason@denizac.org>. See LICENSE.md\n",
    "licenseText": "Copyright (c) MMXV jden <jason@denizac.org>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/listenercount/-/listenercount-1.0.1.tgz#84c8a72ab59c4725321480c975e6508342e70937",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/listenercount/-/listenercount-1.0.1.tgz",
    "hash": "84c8a72ab59c4725321480c975e6508342e70937",
    "integrity": "sha512-3mk/Zag0+IJxeDrxSgaDPy4zZ3w05PRZeJNnlWhzFz5OkX49J4krc+A8X2d2M69vGMBEX0uyl8M+W+8gH+kBqQ==",
    "registry": "npm",
    "packageName": "listenercount",
    "cacheIntegrity": "sha512-3mk/Zag0+IJxeDrxSgaDPy4zZ3w05PRZeJNnlWhzFz5OkX49J4krc+A8X2d2M69vGMBEX0uyl8M+W+8gH+kBqQ== sha1-hMinKrWcRyUyFIDJdeZQg0LnCTc="
  },
  "registry": "npm",
  "hash": "84c8a72ab59c4725321480c975e6508342e70937"
}