{
  "manifest": {
    "name": "@xmldom/xmldom",
    "version": "0.8.10",
    "description": "A pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module.",
    "keywords": [
      "w3c",
      "dom",
      "xml",
      "parser",
      "javascript",
      "DOMParser",
      "XMLSerializer",
      "ponyfill"
    ],
    "homepage": "https://github.com/xmldom/xmldom",
    "repository": {
      "type": "git",
      "url": "git://github.com/xmldom/xmldom.git"
    },
    "main": "lib/index.js",
    "types": "index.d.ts",
    "files": [
      "CHANGELOG.md",
      "LICENSE",
      "readme.md",
      "SECURITY.md",
      "index.d.ts",
      "lib"
    ],
    "scripts": {
      "lint": "eslint lib test",
      "format": "prettier --write test",
      "changelog": "auto-changelog --unreleased-only",
      "start": "nodemon --watch package.json --watch lib --watch test --exec 'npm --silent run test && npm --silent run lint'",
      "stryker": "stryker run",
      "stryker:dry-run": "stryker run -m '' --reporters progress",
      "test": "jest",
      "testrelease": "npm test && eslint lib",
      "version": "./changelog-has-version.sh",
      "release": "np --no-yarn --test-script testrelease --branch release-0.8.x patch"
    },
    "engines": {
      "node": ">=10.0.0"
    },
    "dependencies": {},
    "devDependencies": {
      "@stryker-mutator/core": "5.6.1",
      "auto-changelog": "2.4.0",
      "eslint": "8.25.0",
      "eslint-config-prettier": "8.5.0",
      "eslint-plugin-es5": "1.5.0",
      "eslint-plugin-prettier": "4.2.1",
      "get-stream": "6.0.1",
      "jest": "27.5.1",
      "nodemon": "2.0.20",
      "np": "7.6.2",
      "prettier": "2.7.1",
      "xmltest": "1.5.0",
      "yauzl": "2.10.0"
    },
    "bugs": {
      "url": "https://github.com/xmldom/xmldom/issues"
    },
    "license": "MIT",
    "auto-changelog": {
      "prepend": true,
      "remote": "upstream",
      "tagPrefix": "",
      "template": "./auto-changelog.hbs"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-@xmldom-xmldom-0.8.10-a1337ca426aa61cef9fe15b5b28e340a72f6fa99-integrity/node_modules/@xmldom/xmldom/package.json",
    "readmeFilename": "readme.md",
    "readme": "# @xmldom/xmldom\n\n***Since version 0.7.0 this package is published to npm as [`@xmldom/xmldom`](https://www.npmjs.com/package/@xmldom/xmldom) and no longer as [`xmldom`](https://www.npmjs.com/package/xmldom), because [we are no longer able to publish `xmldom`](https://github.com/xmldom/xmldom/issues/271).***  \n*For better readability in the docs we will continue to talk about this library as \"xmldom\".*\n\n[![license(MIT)](https://img.shields.io/npm/l/@xmldom/xmldom?color=blue&style=flat-square)](https://github.com/xmldom/xmldom/blob/master/LICENSE)\n[![npm](https://img.shields.io/npm/v/@xmldom/xmldom?style=flat-square)](https://www.npmjs.com/package/@xmldom/xmldom)\n[![snyk.io package health](https://snyk.io/advisor/npm-package/@xmldom/xmldom/badge.svg)](https://snyk.io/advisor/npm-package/@xmldom/xmldom)\n[![bug issues](https://img.shields.io/github/issues/xmldom/xmldom/bug?color=red&style=flat-square)](https://github.com/xmldom/xmldom/issues?q=is%3Aissue+is%3Aopen+label%3Abug)\n[![help-wanted issues](https://img.shields.io/github/issues/xmldom/xmldom/help-wanted?color=darkgreen&style=flat-square)](https://github.com/xmldom/xmldom/issues?q=is%3Aissue+is%3Aopen+label%3Ahelp-wanted)\n[![Mutation report](https://img.shields.io/endpoint?style=flat-square&url=https%3A%2F%2Fbadge-api.stryker-mutator.io%2Fgithub.com%2Fxmldom%2Fxmldom%2Fmaster)](https://dashboard.stryker-mutator.io/reports/github.com/xmldom/xmldom/master)\n\n\nxmldom is a javascript [ponyfill](https://ponyfill.com/) to provide the following APIs [that are present in modern browsers](https://caniuse.com/xml-serializer) to other runtimes:\n- convert an XML string into a DOM tree\n  ```\n  new DOMParser().parseFromString(xml, mimeType) => Document\n  ```\n- create, access and modify a DOM tree\n  ```\n  new DOMImplementation().createDocument(...) => Document\n  ```\n- serialize a DOM tree back into an XML string\n  ```\n  new XMLSerializer().serializeToString(node) => string\n  ```\n\nThe target runtimes `xmldom` supports are currently Node >= v10 (ES5) and Rhino ([not tested as part of CI](https://github.com/xmldom/xmldom/discussions/214)).\n\nWhen deciding how to fix bugs or implement features, `xmldom` tries to stay as close  as possible to the various [related specifications/standards](#specs).  \nAs indicated by the version starting with `0.`, this implementation is not feature complete and some implemented features differ from what the specifications describe.  \n**Issues and PRs for such differences are always welcome, even when they only provide a failing test case.**\n\nThis project was forked from it's [original source](https://github.com/jindw/xmldom) in 2019, more details about that transition can be found in the [CHANGELOG](CHANGELOG.md#maintainer-changes).\n\n## Usage\n\n### Install:\n\n> npm install @xmldom/xmldom\n\n### Example:\n\n[In NodeJS](examples/nodejs/src/index.js)\n```javascript\nconst { DOMParser, XMLSerializer } = require('@xmldom/xmldom')\n\nconst source = `<xml xmlns=\"a\">\n\t<child>test</child>\n\t<child/>\n</xml>`\n\nconst doc = new DOMParser().parseFromString(source, 'text/xml')\n\nconst serialized = new XMLSerializer().serializeToString(doc)\n```\n\nNote: in Typescript ~and ES6~(see #316) you can use the `import` approach, as follows:\n\n```typescript\nimport { DOMParser } from '@xmldom/xmldom'\n```\n\n## API Reference\n\n * [DOMParser](https://developer.mozilla.org/en-US/docs/Web/API/DOMParser):\n\n\t```javascript\n\tparseFromString(xmlsource,mimeType)\n\t```\n\t* **options extension** _by xmldom_ (not DOM standard!!)\n\n\t```javascript\n\t//added the options argument\n\tnew DOMParser(options)\n\t\n\t//errorHandler is supported\n\tnew DOMParser({\n\t\t/**\n\t\t * locator is always need for error position info\n\t\t */\n\t\tlocator:{},\n\t\t/**\n\t\t * you can override the errorHandler for xml parser\n\t\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t\t */\n\t\terrorHandler:{warning:function(w){console.warn(w)},error:callback,fatalError:callback}\n\t\t//only callback model\n\t\t//errorHandler:function(level,msg){console.log(level,msg)}\n\t})\n\t\t\n\t```\n\n * [XMLSerializer](https://developer.mozilla.org/en-US/docs/Web/API/XMLSerializer)\n \n\t```javascript\n\tserializeToString(node)\n\t```\n### DOM level2 method and attribute:\n\n* [Node](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247)\n\n  readonly class properties (aka `NodeType`),  \n  these can be accessed from any `Node` instance `node`:  \n  `if (node.nodeType === node.ELEMENT_NODE) {...`\n  \n    1. `ELEMENT_NODE` (`1`)\n    2. `ATTRIBUTE_NODE` (`2`)\n    3. `TEXT_NODE` (`3`)\n    4. `CDATA_SECTION_NODE` (`4`)\n    5. `ENTITY_REFERENCE_NODE` (`5`)\n    6. `ENTITY_NODE` (`6`)\n    7. `PROCESSING_INSTRUCTION_NODE` (`7`)\n    8. `COMMENT_NODE` (`8`)\n    9. `DOCUMENT_NODE` (`9`)\n    10. `DOCUMENT_TYPE_NODE` (`10`)\n    11. `DOCUMENT_FRAGMENT_NODE` (`11`)\n    12. `NOTATION_NODE` (`12`)\n  \n  attribute:\n    - `nodeValue` | `prefix`\n  \n  readonly attribute:\n    - `nodeName` | `nodeType` | `parentNode` | `childNodes` | `firstChild` | `lastChild` | `previousSibling` | `nextSibling` | `attributes` | `ownerDocument` | `namespaceURI` | `localName`\n  \n  method:\t\n    * `insertBefore(newChild, refChild)`\n    * `replaceChild(newChild, oldChild)`\n    * `removeChild(oldChild)`\n    * `appendChild(newChild)`\n    * `hasChildNodes()`\n    * `cloneNode(deep)`\n    * `normalize()`\n    * `isSupported(feature, version)`\n    * `hasAttributes()`\n* [DOMException](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html)\n\n  extends the Error type thrown as part of DOM API.\n\n  readonly class properties:\n  - `INDEX_SIZE_ERR` (`1`)\n  - `DOMSTRING_SIZE_ERR` (`2`)\n  - `HIERARCHY_REQUEST_ERR` (`3`)\n  - `WRONG_DOCUMENT_ERR` (`4`)\n  - `INVALID_CHARACTER_ERR` (`5`)\n  - `NO_DATA_ALLOWED_ERR` (`6`)\n  - `NO_MODIFICATION_ALLOWED_ERR` (`7`)\n  - `NOT_FOUND_ERR` (`8`)\n  - `NOT_SUPPORTED_ERR` (`9`)\n  - `INUSE_ATTRIBUTE_ERR` (`10`)\n  - `INVALID_STATE_ERR` (`11`)\n  - `SYNTAX_ERR` (`12`)\n  - `INVALID_MODIFICATION_ERR` (`13`)\n  - `NAMESPACE_ERR` (`14`)\n  - `INVALID_ACCESS_ERR` (`15`)\n   \n  attributes:\n  -  `code` with a value matching one of the above constants.\n\n* [DOMImplementation](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-102161490)\n\n  method:\n  - `hasFeature(feature, version)`\n  - `createDocumentType(qualifiedName, publicId, systemId)`\n  - `createDocument(namespaceURI, qualifiedName, doctype)`\n\n* [Document](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#i-Document) : Node\n\t\t\n  readonly attribute:\n  - `doctype` | `implementation` | `documentElement`\n  \n  method:\n  - `createElement(tagName)`\n  - `createDocumentFragment()`\n  - `createTextNode(data)`\n  - `createComment(data)`\n  - `createCDATASection(data)`\n  - `createProcessingInstruction(target, data)`\n  - `createAttribute(name)`\n  - `createEntityReference(name)`\n  - `getElementsByTagName(tagname)`\n  - `importNode(importedNode, deep)`\n  - `createElementNS(namespaceURI, qualifiedName)`\n  - `createAttributeNS(namespaceURI, qualifiedName)`\n  - `getElementsByTagNameNS(namespaceURI, localName)`\n  - `getElementById(elementId)`\n\n* [DocumentFragment](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3) : Node\n* [Element](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-745549614) : Node\n\t\t\n  readonly attribute:\n  - `tagName`\n\n  method:\n  - `getAttribute(name)`\n  - `setAttribute(name, value)`\n  - `removeAttribute(name)`\n  - `getAttributeNode(name)`\n  - `setAttributeNode(newAttr)`\n  - `removeAttributeNode(oldAttr)`\n  - `getElementsByTagName(name)`\n  - `getAttributeNS(namespaceURI, localName)`\n  - `setAttributeNS(namespaceURI, qualifiedName, value)`\n  - `removeAttributeNS(namespaceURI, localName)`\n  - `getAttributeNodeNS(namespaceURI, localName)`\n  - `setAttributeNodeNS(newAttr)`\n  - `getElementsByTagNameNS(namespaceURI, localName)`\n  - `hasAttribute(name)`\n  - `hasAttributeNS(namespaceURI, localName)`\n\n* [Attr](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-637646024) : Node\n\n  attribute:\n  - `value`\n\n  readonly attribute:\n  - `name` | `specified` | `ownerElement`\n\n* [NodeList](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177)\n\t\t\n  readonly attribute:\n  - `length`\n  \n  method:\n  - `item(index)`\n\t\n* [NamedNodeMap](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1780488922)\n\n  readonly attribute:\n  - `length`\n  \n  method:\n  - `getNamedItem(name)`\n  - `setNamedItem(arg)`\n  - `removeNamedItem(name)`\n  - `item(index)`\n  - `getNamedItemNS(namespaceURI, localName)`\n  - `setNamedItemNS(arg)`\n  - `removeNamedItemNS(namespaceURI, localName)`\n\t\t\n* [CharacterData](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-FF21A306) : Node\n\t\n  method:\n  - `substringData(offset, count)`\n  - `appendData(arg)`\n  - `insertData(offset, arg)`\n  - `deleteData(offset, count)`\n  - `replaceData(offset, count, arg)`\n\t\t\n* [Text](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1312295772) : CharacterData\n\t \n  method:\n  - `splitText(offset)`\n\t\t\t\n* [CDATASection](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-667469212)\n* [Comment](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1728279322) : CharacterData\n\t\n* [DocumentType](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-412266927)\n\t\n  readonly attribute:\n  - `name` | `entities` | `notations` | `publicId` | `systemId` | `internalSubset`\n\t\t\t\n* Notation : Node\n\t\n  readonly attribute:\n  - `publicId` | `systemId`\n\t\t\t\n* Entity : Node\n\t\n  readonly attribute:\n  - `publicId` | `systemId` | `notationName`\n\t\t\t\n* EntityReference : Node \n* ProcessingInstruction : Node \n\n  attribute:\n  - `data`\n  readonly attribute:\n  - `target`\n\t\t\n### DOM level 3 support:\n\n* [Node](http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent)\n\t\t\n  attribute:\n  - `textContent`\n  \n  method:\n  - `isDefaultNamespace(namespaceURI)`\n  - `lookupNamespaceURI(prefix)`\n\n### DOM extension by xmldom\n\n* [Node] Source position extension; \n\t\t\n  attribute:\n  - `lineNumber` //number starting from `1`\n  - `columnNumber` //number starting from `1`\n\n## Specs\n\nThe implementation is based on several specifications:\n\n<!-- Should open in new tab and the links in the SVG should be clickable there! -->\n<a href=\"https://raw.githubusercontent.com/xmldom/xmldom/master/docs/specs.svg\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" >![Overview of related specifications and their relations](docs/specs.svg)</a>\n\n### DOM Parsing and Serialization\n\nFrom the [W3C DOM Parsing and Serialization (WD 2016)](https://www.w3.org/TR/2016/WD-DOM-Parsing-20160517/) `xmldom` provides an implementation for the interfaces:\n- `DOMParser`\n- `XMLSerializer`\n\nNote that there are some known deviations between this implementation and the W3 specifications.\n\nNote: [The latest version of this spec](https://w3c.github.io/DOM-Parsing/) has the status \"Editors Draft\", since it is under active development. One major change is that [the definition of the `DOMParser` interface has been moved to the HTML spec](https://w3c.github.io/DOM-Parsing/#the-domparser-interface)\n\n\n### DOM\n\nThe original author claims that xmldom implements [DOM Level 2] in a \"fully compatible\" way and some parts of [DOM Level 3], but there are not enough tests to prove this. Both Specifications are now superseded by the [DOM Level 4 aka Living standard] wich has a much broader scope than xmldom.\n\nxmldom implements the following interfaces (most constructors are currently not exposed):\n- `Attr`\n- `CDATASection`\n- `CharacterData`\n- `Comment`\n- `Document`\n- `DocumentFragment`\n- `DocumentType`\n- `DOMException` (constructor exposed) \n- `DOMImplementation` (constructor exposed)\n- `Element`\n- `Entity`\n- `EntityReference`\n- `LiveNodeList`\n- `NamedNodeMap`\n- `Node` (constructor exposed)\n- `NodeList`\n- `Notation`\n- `ProcessingInstruction`\n- `Text`\n\nmore details are available in the (incomplete) [API Reference](#api-reference) section.\n\n### HTML\n\nxmldom does not have any goal of supporting the full spec, but it has some capability to parse, report and serialize things differently when \"detecting HTML\" (by checking the default namespace).\nThere is an upcoming change to better align the implementation with the latest specs, related to <https://github.com/xmldom/xmldom/issues/203>.\n\n### SAX, XML, XMLNS\n\nxmldom has an own SAX parser implementation to do the actual parsing, which implements some interfaces in alignment with the Java interfaces SAX defines:\n- `XMLReader`\n- `DOMHandler`\n\nThere is an idea/proposal to make it possible to replace it with something else in <https://github.com/xmldom/xmldom/issues/55>\n",
    "licenseText": "Copyright 2019 - present Christopher J. Brody and other contributors, as listed in: https://github.com/xmldom/xmldom/graphs/contributors\nCopyright 2012 - 2017 @jindw <jindw@xidea.org> and other contributors, as listed in: https://github.com/jindw/xmldom/graphs/contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@xmldom/xmldom/-/xmldom-0.8.10.tgz#a1337ca426aa61cef9fe15b5b28e340a72f6fa99",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@xmldom/xmldom/-/xmldom-0.8.10.tgz",
    "hash": "a1337ca426aa61cef9fe15b5b28e340a72f6fa99",
    "integrity": "sha512-2WALfTl4xo2SkGCYRt6rDTFfk9R1czmBvUQy12gK2KuRKIpWEhcbbzy8EZXtz/jkRqHX8bFEc6FC1HjX4TUWYw==",
    "registry": "npm",
    "packageName": "@xmldom/xmldom",
    "cacheIntegrity": "sha512-2WALfTl4xo2SkGCYRt6rDTFfk9R1czmBvUQy12gK2KuRKIpWEhcbbzy8EZXtz/jkRqHX8bFEc6FC1HjX4TUWYw== sha1-oTN8pCaqYc75/hW1so40CnL2+pk="
  },
  "registry": "npm",
  "hash": "a1337ca426aa61cef9fe15b5b28e340a72f6fa99"
}