{
  "manifest": {
    "name": "pako",
    "description": "zlib port to javascript - fast, modularized, with browser support",
    "version": "2.1.0",
    "keywords": [
      "zlib",
      "deflate",
      "inflate",
      "gzip"
    ],
    "contributors": [
      {
        "name": "Andrei Tuputcyn",
        "url": "https://github.com/andr83"
      },
      {
        "name": "Vitaly Puzrin",
        "url": "https://github.com/puzrin"
      },
      {
        "name": "Friedel Ziegelmayer",
        "url": "https://github.com/dignifiedquire"
      },
      {
        "name": "Kirill Efimov",
        "url": "https://github.com/Kirill89"
      },
      {
        "name": "Jean-loup Gailly"
      },
      {
        "name": "Mark Adler"
      }
    ],
    "files": [
      "index.js",
      "dist/",
      "lib/"
    ],
    "license": "(MIT AND Zlib)",
    "repository": {
      "type": "git",
      "url": "https://github.com/nodeca/pako.git"
    },
    "module": "./dist/pako.esm.mjs",
    "exports": {
      ".": {
        "import": "./dist/pako.esm.mjs",
        "require": "./index.js"
      },
      "./package.json": "./package.json",
      "./dist/*": "./dist/*",
      "./lib/*": "./lib/*",
      "./lib/zlib/*": "./lib/zlib/*",
      "./lib/utils/*": "./lib/utils/*"
    },
    "scripts": {
      "lint": "eslint .",
      "test": "npm run lint && mocha",
      "coverage": "npm run lint && nyc mocha && nyc report --reporter html",
      "build": "rollup -c",
      "build_fixtures": "node support/build_fixtures.js",
      "doc": "node support/build_doc.js",
      "gh-doc": "npm run doc && gh-pages -d doc -f",
      "prepublishOnly": "npm run gh-doc"
    },
    "devDependencies": {
      "@babel/preset-env": "^7.12.1",
      "@rollup/plugin-babel": "^5.2.1",
      "@rollup/plugin-commonjs": "^16.0.0",
      "@rollup/plugin-node-resolve": "^10.0.0",
      "eslint": "^7.13.0",
      "gh-pages": "^3.1.0",
      "mocha": "^8.2.1",
      "multiparty": "^4.1.3",
      "ndoc": "^6.0.0",
      "nyc": "^15.1.0",
      "rollup": "^2.33.1",
      "rollup-plugin-terser": "^7.0.2",
      "shelljs": "^0.8.4"
    },
    "dependencies": {},
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-pako-2.1.0-266cc37f98c7d883545d11335c00fbd4062c9a86-integrity/node_modules/pako/package.json",
    "readmeFilename": "README.md",
    "readme": "pako\n==========================================\n\n[![CI](https://github.com/nodeca/pako/workflows/CI/badge.svg)](https://github.com/nodeca/pako/actions)\n[![NPM version](https://img.shields.io/npm/v/pako.svg)](https://www.npmjs.org/package/pako)\n\n> zlib port to javascript, very fast!\n\n__Why pako is cool:__\n\n- Results are binary equal to well known [zlib](http://www.zlib.net/) (now contains ported zlib v1.2.8).\n- Almost as fast in modern JS engines as C implementation (see benchmarks).\n- Works in browsers, you can browserify any separate component.\n\nThis project was done to understand how fast JS can be and is it necessary to\ndevelop native C modules for CPU-intensive tasks. Enjoy the result!\n\n\n__Benchmarks:__\n\n\nnode v12.16.3 (zlib 1.2.9), 1mb input sample:\n\n```\ndeflate-imaya x 4.75 ops/sec ±4.93% (15 runs sampled)\ndeflate-pako x 10.38 ops/sec ±0.37% (29 runs sampled)\ndeflate-zlib x 17.74 ops/sec ±0.77% (46 runs sampled)\ngzip-pako x 8.86 ops/sec ±1.41% (29 runs sampled)\ninflate-imaya x 107 ops/sec ±0.69% (77 runs sampled)\ninflate-pako x 131 ops/sec ±1.74% (82 runs sampled)\ninflate-zlib x 258 ops/sec ±0.66% (88 runs sampled)\nungzip-pako x 115 ops/sec ±1.92% (80 runs sampled)\n```\n\nnode v14.15.0 (google's zlib), 1mb output sample:\n\n```\ndeflate-imaya x 4.93 ops/sec ±3.09% (16 runs sampled)\ndeflate-pako x 10.22 ops/sec ±0.33% (29 runs sampled)\ndeflate-zlib x 18.48 ops/sec ±0.24% (48 runs sampled)\ngzip-pako x 10.16 ops/sec ±0.25% (28 runs sampled)\ninflate-imaya x 110 ops/sec ±0.41% (77 runs sampled)\ninflate-pako x 134 ops/sec ±0.66% (83 runs sampled)\ninflate-zlib x 402 ops/sec ±0.74% (87 runs sampled)\nungzip-pako x 113 ops/sec ±0.62% (80 runs sampled)\n```\n\nzlib's test is partially affected by marshalling (that make sense for inflate only).\nYou can change deflate level to 0 in benchmark source, to investigate details.\nFor deflate level 6 results can be considered as correct.\n\n__Install:__\n\n```\nnpm install pako\n```\n\n\nExamples / API\n--------------\n\nFull docs - http://nodeca.github.io/pako/\n\n```javascript\nconst pako = require('pako');\n\n// Deflate\n//\nconst input = new Uint8Array();\n//... fill input data here\nconst output = pako.deflate(input);\n\n// Inflate (simple wrapper can throw exception on broken stream)\n//\nconst compressed = new Uint8Array();\n//... fill data to uncompress here\ntry {\n  const result = pako.inflate(compressed);\n  // ... continue processing\n} catch (err) {\n  console.log(err);\n}\n\n//\n// Alternate interface for chunking & without exceptions\n//\n\nconst deflator = new pako.Deflate();\n\ndeflator.push(chunk1, false);\ndeflator.push(chunk2); // second param is false by default.\n...\ndeflator.push(chunk_last, true); // `true` says this chunk is last\n\nif (deflator.err) {\n  console.log(deflator.msg);\n}\n\nconst output = deflator.result;\n\n\nconst inflator = new pako.Inflate();\n\ninflator.push(chunk1);\ninflator.push(chunk2);\n...\ninflator.push(chunk_last); // no second param because end is auto-detected\n\nif (inflator.err) {\n  console.log(inflator.msg);\n}\n\nconst output = inflator.result;\n```\n\nSometime you can wish to work with strings. For example, to send\nstringified objects to server. Pako's deflate detects input data type, and\nautomatically recode strings to utf-8 prior to compress. Inflate has special\noption, to say compressed data has utf-8 encoding and should be recoded to\njavascript's utf-16.\n\n```javascript\nconst pako = require('pako');\n\nconst test = { my: 'super', puper: [456, 567], awesome: 'pako' };\n\nconst compressed = pako.deflate(JSON.stringify(test));\n\nconst restored = JSON.parse(pako.inflate(compressed, { to: 'string' }));\n```\n\n\nNotes\n-----\n\nPako does not contain some specific zlib functions:\n\n- __deflate__ -  methods `deflateCopy`, `deflateBound`, `deflateParams`,\n  `deflatePending`, `deflatePrime`, `deflateTune`.\n- __inflate__ - methods `inflateCopy`, `inflateMark`,\n  `inflatePrime`, `inflateGetDictionary`, `inflateSync`, `inflateSyncPoint`, `inflateUndermine`.\n- High level inflate/deflate wrappers (classes) may not support some flush\n  modes.\n\n\npako for enterprise\n-------------------\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of pako and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-pako?utm_source=npm-pako&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n\nAuthors\n-------\n\n- Andrey Tupitsin [@anrd83](https://github.com/andr83)\n- Vitaly Puzrin [@puzrin](https://github.com/puzrin)\n\nPersonal thanks to:\n\n- Vyacheslav Egorov ([@mraleph](https://github.com/mraleph)) for his awesome\n  tutorials about optimising JS code for v8, [IRHydra](http://mrale.ph/irhydra/)\n  tool and his advices.\n- David Duponchel ([@dduponchel](https://github.com/dduponchel)) for help with\n  testing.\n\nOriginal implementation (in C):\n\n- [zlib](http://zlib.net/) by Jean-loup Gailly and Mark Adler.\n\n\nLicense\n-------\n\n- MIT - all files, except `/lib/zlib` folder\n- ZLIB - `/lib/zlib` content\n",
    "licenseText": "(The MIT License)\n\nCopyright (C) 2014-2017 by Vitaly Puzrin and Andrei Tuputcyn\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/pako/-/pako-2.1.0.tgz#266cc37f98c7d883545d11335c00fbd4062c9a86",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/pako/-/pako-2.1.0.tgz",
    "hash": "266cc37f98c7d883545d11335c00fbd4062c9a86",
    "integrity": "sha512-w+eufiZ1WuJYgPXbV/PO3NCMEc3xqylkKHzp8bxp1uW4qaSNQUkwmLLEc3kKsfz8lpV1F8Ht3U1Cm+9Srog2ug==",
    "registry": "npm",
    "packageName": "pako",
    "cacheIntegrity": "sha512-w+eufiZ1WuJYgPXbV/PO3NCMEc3xqylkKHzp8bxp1uW4qaSNQUkwmLLEc3kKsfz8lpV1F8Ht3U1Cm+9Srog2ug== sha1-JmzDf5jH2INUXREzXAD71AYsmoY="
  },
  "registry": "npm",
  "hash": "266cc37f98c7d883545d11335c00fbd4062c9a86"
}