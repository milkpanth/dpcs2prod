{
  "manifest": {
    "name": "@azure/core-lro",
    "author": {
      "name": "Microsoft Corporation"
    },
    "sdk-type": "client",
    "type": "module",
    "version": "2.7.1",
    "description": "Isomorphic client library for supporting long-running operations in node.js and browser.",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "browser": {
          "types": "./dist/browser/index.d.ts",
          "default": "./dist/browser/index.js"
        },
        "react-native": {
          "types": "./dist/react-native/index.d.ts",
          "default": "./dist/react-native/index.js"
        },
        "import": {
          "types": "./dist/esm/index.d.ts",
          "default": "./dist/esm/index.js"
        },
        "require": {
          "types": "./dist/commonjs/index.d.ts",
          "default": "./dist/commonjs/index.js"
        }
      }
    },
    "files": [
      "dist/",
      "LICENSE",
      "README.md"
    ],
    "main": "./dist/commonjs/index.js",
    "types": "./dist/commonjs/index.d.ts",
    "browser": "./dist/browser/index.js",
    "tags": [
      "isomorphic",
      "browser",
      "javascript",
      "node",
      "microsoft",
      "lro",
      "polling"
    ],
    "keywords": [
      "isomorphic",
      "browser",
      "javascript",
      "node",
      "microsoft",
      "lro",
      "polling",
      "azure",
      "cloud"
    ],
    "engines": {
      "node": ">=18.0.0"
    },
    "license": "MIT",
    "homepage": "https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/core/core-lro/README.md",
    "repository": {
      "type": "git",
      "url": "https://github.com/Azure/azure-sdk-for-js.git"
    },
    "bugs": {
      "url": "https://github.com/Azure/azure-sdk-for-js/issues"
    },
    "sideEffects": false,
    "scripts": {
      "build:samples": "echo Obsolete",
      "build:test": "npm run clean && tshy && dev-tool run build-test",
      "build": "npm run clean && tshy && api-extractor run --local",
      "check-format": "dev-tool run vendored prettier --list-different --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.{ts,cts,mts}\" \"test/**/*.{ts,cts,mts}\" \"*.{js,cjs,mjs,json}\"",
      "clean": "rimraf --glob dist dist-* types *.log browser statistics.html coverage src/**/*.js test/**/*.js",
      "execute:samples": "echo skipped",
      "extract-api": "tshy && api-extractor run --local",
      "format": "dev-tool run vendored prettier --write --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.{ts,cts,mts}\" \"test/**/*.{ts,cts,mts}\" \"*.{js,cjs,mjs,json}\"",
      "integration-test:browser": "echo skipped",
      "integration-test:node": "echo skipped",
      "integration-test": "npm run integration-test:node && npm run integration-test:browser",
      "lint:fix": "eslint package.json api-extractor.json src test --ext .ts --ext .cts --ext .mts --fix --fix-type [problem,suggestion]",
      "lint": "eslint package.json api-extractor.json src test  --ext .ts --ext .cts --ext .mts",
      "pack": "npm pack 2>&1",
      "test:browser": "npm run build:test && npm run unit-test:browser && npm run integration-test:browser",
      "test:node": "npm run build:test && npm run unit-test:node && npm run integration-test:node",
      "test": "npm run build:test && npm run unit-test",
      "unit-test:browser": "npm run build:test && dev-tool run test:vitest --no-test-proxy --browser",
      "unit-test:node": "dev-tool run test:vitest --no-test-proxy",
      "unit-test": "npm run unit-test:node && npm run unit-test:browser"
    },
    "dependencies": {
      "@azure/abort-controller": "^2.0.0",
      "@azure/core-util": "^1.2.0",
      "@azure/logger": "^1.0.0",
      "tslib": "^2.6.2"
    },
    "devDependencies": {
      "@azure/core-rest-pipeline": "^1.1.0",
      "@azure/eslint-plugin-azure-sdk": "^3.0.0",
      "@azure/dev-tool": "^1.0.0",
      "@microsoft/api-extractor": "^7.40.3",
      "@types/node": "^18.0.0",
      "@vitest/browser": "^1.3.1",
      "@vitest/coverage-istanbul": "^1.3.1",
      "eslint": "^8.56.0",
      "playwright": "^1.41.2",
      "prettier": "^3.2.5",
      "rimraf": "^5.0.5",
      "tshy": "^1.11.1",
      "typescript": "~5.3.3",
      "vitest": "^1.3.1"
    },
    "//metadata": {
      "migrationDate": "2023-03-08T18:36:03.000Z"
    },
    "tshy": {
      "exports": {
        "./package.json": "./package.json",
        ".": "./src/index.ts"
      },
      "dialects": [
        "esm",
        "commonjs"
      ],
      "esmDialects": [
        "browser",
        "react-native"
      ],
      "selfLink": false
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-@azure-core-lro-2.7.1-a110ba4a57094de4b2fa37283de5f2c7f487e1f9-integrity/node_modules/@azure/core-lro/package.json",
    "readmeFilename": "README.md",
    "readme": "# Azure Core LRO client library for JavaScript\n\nThis is the default implementation of long running operations in Azure SDK JavaScript client libraries which work in both the browser and NodeJS. This library is primarily intended to be used in code generated by [AutoRest](https://github.com/Azure/Autorest) and [`autorest.typescript`](https://github.com/Azure/autorest.typescript).\n\n`@azure/core-lro` follows [The Azure SDK Design Guidelines for Long Running Operations](https://azure.github.io/azure-sdk/typescript_design.html#ts-lro)\n\nKey links:\n\n- [Source code](https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/core/core-lro)\n- [Package (npm)](https://www.npmjs.com/package/@azure/core-lro) \n- [API Reference Documentation](https://docs.microsoft.com/javascript/api/@azure/core-lro) \n- [Samples](https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/core/core-lro/samples)\n\n## Getting started\n\n### Currently supported environments\n\n- [LTS versions of Node.js](https://github.com/nodejs/release#release-schedule)\n- Latest versions of Safari, Chrome, Edge, and Firefox.\n\n### Installation\n\nThis package is primarily used in generated code and not meant to be consumed directly by end users.\n\n## Key concepts\n\n### `SimplePollerLike`\n\nA poller is an object that can poll the long running operation on the server for its state until it reaches a terminal state. It provides the following methods:\n\n- `getOperationState`: returns the state of the operation, typed as a type that extends `OperationState`\n- `getResult`: returns the result of the operation when it completes and `undefined` otherwise\n- `isDone`: returns whether the operation is in a terminal state\n- `isStopped`: returns whether the polling stopped\n- `onProgress`: registers callback functions to be called every time a polling response is received\n- `poll`: sends a single polling request\n- `pollUntilDone`: returns a promise that will resolve with the result of the operation\n- `stopPolling`: stops polling;\n- `toString`: serializes the state of the poller\n\n### `OperationState`\n\nA type for the operation state. It contains a `status` field with the following possible values: `notStarted`, `running`, `succeeded`, `failed`, and `canceled`. It can be accessed as follows:\n\n```typescript\nswitch(poller.getOperationState().status) {\n  case \"succeeded\":  // return poller.getResult();\n  case \"failed\":     // throw poller.getOperationState().error;\n  case \"canceled\":   // throw new Error(\"Operation was canceled\");\n  case \"running\":    // ...\n  case \"notStarted\": // ...\n}\n```\n\n### `createHttpPoller`\n\nA function that returns an object of type `SimplePollerLike`. This poller behaves as follows in the presence of errors:\n\n- calls to `poll` and `pollUntilDone` will throw an error in case the operation has failed or canceled unless the `resolveOnUnsuccessful` option was set to true.\n- `poller.getOperationState().status` will be set to true when either the operation fails or it returns an error response.\n\n\n## Examples\n\nExamples can be found in the `samples` folder.\n\n## Troubleshooting\n\n### Logging\n\nLogs can be added at the discretion of the library implementing the Long Running Operation poller.\nPackages inside of [azure-sdk-for-js](https://github.com/Azure/azure-sdk-for-js) use\n[@azure/logger](https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/core/logger).\n\n## Next steps\n\nPlease take a look at the [samples](https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/core/core-lro/samples) directory for detailed examples on how to use this library.\n\n## Contributing\n\nIf you'd like to contribute to this library, please read the [contributing guide](https://github.com/Azure/azure-sdk-for-js/blob/main/CONTRIBUTING.md) to learn more about how to build and test the code.\n\n### Testing\n\nTo run our tests, first install the dependencies (with `npm install` or `rush install`),\nthen run the unit tests with: `npm run unit-test`.\n\n### Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-js%2Fsdk%2Fcore%2Fcore-lro%2FREADME.png)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2020 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@azure/core-lro/-/core-lro-2.7.1.tgz#a110ba4a57094de4b2fa37283de5f2c7f487e1f9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@azure/core-lro/-/core-lro-2.7.1.tgz",
    "hash": "a110ba4a57094de4b2fa37283de5f2c7f487e1f9",
    "integrity": "sha512-kXSlrNHOCTVZMxpXNRqzgh9/j4cnNXU5Hf2YjMyjddRhCXFiFRzmNaqwN+XO9rGTsCOIaaG7M67zZdyliXZG9g==",
    "registry": "npm",
    "packageName": "@azure/core-lro",
    "cacheIntegrity": "sha512-kXSlrNHOCTVZMxpXNRqzgh9/j4cnNXU5Hf2YjMyjddRhCXFiFRzmNaqwN+XO9rGTsCOIaaG7M67zZdyliXZG9g== sha1-oRC6SlcJTeSy+jcoPeXyx/SH4fk="
  },
  "registry": "npm",
  "hash": "a110ba4a57094de4b2fa37283de5f2c7f487e1f9"
}