{
  "manifest": {
    "name": "@azure/core-tracing",
    "version": "1.0.0-preview.13",
    "description": "Provides low-level interfaces and helper methods for tracing in Azure SDK",
    "sdk-type": "client",
    "main": "dist/index.js",
    "module": "dist-esm/src/index.js",
    "browser": {
      "./dist-esm/src/utils/global.js": "./dist-esm/src/utils/global.browser.js"
    },
    "types": "types/core-tracing.d.ts",
    "scripts": {
      "audit": "node ../../../common/scripts/rush-audit.js && rimraf node_modules package-lock.json && npm i --package-lock-only 2>&1 && npm audit",
      "build:samples": "echo Obsolete",
      "build:test": "tsc -p . && rollup -c 2>&1",
      "build": "tsc -p . && rollup -c 2>&1 && api-extractor run --local",
      "check-format": "prettier --list-different --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.ts\" \"test/**/*.ts\" \"*.{js,json}\"",
      "clean": "rimraf dist dist-* temp types *.tgz *.log",
      "docs": "typedoc --excludePrivate --excludeNotExported --excludeExternals --stripInternal --mode file --out ./dist/docs ./src",
      "execute:samples": "echo skipped",
      "extract-api": "tsc -p . && api-extractor run --local",
      "format": "prettier --write --config ../../../.prettierrc.json --ignore-path ../../../.prettierignore \"src/**/*.ts\" \"test/**/*.ts\" \"samples-dev/**/*.ts\" \"*.{js,json}\"",
      "integration-test:browser": "echo skipped",
      "integration-test:node": "echo skipped",
      "integration-test": "npm run integration-test:node && npm run integration-test:browser",
      "lint:fix": "eslint package.json api-extractor.json src test --ext .ts --fix --fix-type [problem,suggestion]",
      "lint": "eslint package.json api-extractor.json src test --ext .ts",
      "pack": "npm pack 2>&1",
      "prebuild": "npm run clean",
      "test:browser": "npm run clean && npm run build:test && npm run unit-test:browser && npm run integration-test:browser",
      "test:node": "npm run clean && tsc -p . && npm run unit-test:node && npm run integration-test:node",
      "test": "npm run clean && tsc -p . && npm run unit-test:node && rollup -c 2>&1 && npm run unit-test:browser && npm run integration-test",
      "unit-test:browser": "karma start --single-run",
      "unit-test:node": "mocha -r esm -r ts-node/register --reporter ../../../common/tools/mocha-multi-reporter.js --timeout 1200000 --full-trace  --exclude \"test/**/browser/*.spec.ts\" \"test/**/*.spec.ts\"",
      "unit-test": "npm run unit-test:node && npm run unit-test:browser"
    },
    "files": [
      "dist/",
      "dist-esm/src/",
      "types/core-tracing.d.ts",
      "README.md",
      "LICENSE"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/Azure/azure-sdk-for-js.git"
    },
    "keywords": [
      "azure",
      "tracing",
      "cloud"
    ],
    "author": {
      "name": "Microsoft Corporation"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/Azure/azure-sdk-for-js/issues"
    },
    "engines": {
      "node": ">=12.0.0"
    },
    "homepage": "https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/core/core-tracing/README.md",
    "sideEffects": false,
    "dependencies": {
      "@opentelemetry/api": "^1.0.1",
      "tslib": "^2.2.0"
    },
    "devDependencies": {
      "@azure/core-auth": "^1.3.0",
      "@azure/dev-tool": "^1.0.0",
      "@azure/eslint-plugin-azure-sdk": "^3.0.0",
      "@microsoft/api-extractor": "7.7.11",
      "@opentelemetry/tracing": "^0.22.0",
      "@types/chai": "^4.1.6",
      "@types/mocha": "^7.0.2",
      "@types/node": "^12.0.0",
      "chai": "^4.2.0",
      "cross-env": "^7.0.2",
      "eslint": "^7.15.0",
      "inherits": "^2.0.3",
      "karma": "^6.2.0",
      "karma-chrome-launcher": "^3.0.0",
      "karma-coverage": "^2.0.0",
      "karma-edge-launcher": "^0.4.2",
      "karma-env-preprocessor": "^0.1.1",
      "karma-firefox-launcher": "^1.1.0",
      "karma-ie-launcher": "^1.0.0",
      "karma-junit-reporter": "^2.0.1",
      "karma-mocha": "^2.0.1",
      "karma-mocha-reporter": "^2.2.5",
      "karma-sourcemap-loader": "^0.3.8",
      "mocha": "^7.1.1",
      "mocha-junit-reporter": "^1.18.0",
      "prettier": "^1.16.4",
      "rimraf": "^3.0.0",
      "rollup": "^1.16.3",
      "typescript": "~4.2.0",
      "util": "^0.12.1",
      "typedoc": "0.15.2",
      "sinon": "^9.0.2",
      "@types/sinon": "^9.0.4"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-@azure-core-tracing-1.0.0-preview.13-55883d40ae2042f6f1e12b17dd0c0d34c536d644-integrity/node_modules/@azure/core-tracing/package.json",
    "readmeFilename": "README.md",
    "readme": "# Azure Core tracing library for JavaScript\n\nThis is the core tracing library that provides low-level interfaces and helper methods for tracing in Azure SDK JavaScript libraries which work in the browser and Node.js.\n\n## Getting started\n\n### Installation\n\nInstall this library using npm as follows\n\n```\nnpm install @azure/core-tracing\n```\n\n## Key Concepts\n\nThe `@azure/core-tracing` package supports enabling tracing for Azure SDK packages, using an [OpenTelemetry](https://opentelemetry.io/) `Tracer`.\n\nBy default, all libraries log with a `NoOpTracer` that takes no action.\nTo change this, you have to use `setTracer` to set a new default `Tracer`.\n\n## Examples\n\n### Example 1 - Setting an OpenTelemetry Tracer\n\n```js\nconst opentelemetry = require(\"@opentelemetry/api\");\nconst { BasicTracer, SimpleSpanProcessor } = require(\"@opentelemetry/tracing\");\nconst { ZipkinExporter } = require(\"@opentelemetry/exporter-zipkin\");\nconst { setTracer } = require(\"@azure/core-tracing\");\n\nconst exporter = new ZipkinExporter({\n  serviceName: \"azure-tracing-sample\"\n});\nconst tracer = new BasicTracer();\ntracer.addSpanProcessor(new SimpleSpanProcessor(exporter));\n\nsetTracer(tracer);\n\nconst rootSpan = tracer.startSpan(\"root\");\nconst context = opentelemetry.setSpan(opentelemetry.context.active(), rootSpan);\n\n// Call some client library methods and pass rootSpan via tracingOptions.\n\nrootSpan.end();\nexporter.shutdown();\n```\n\n### Example 2 - Passing current Context to library operations\n\n```js\n// Given a BlobClient from @azure/storage-blob\nconst result = await blobClient.download(undefined, undefined, {\n  tracingOptions: {\n    tracingContext: context\n  }\n});\n```\n\n## Next steps\n\nYou can build and run the tests locally by executing `rushx test`. Explore the `test` folder to see advanced usage and behavior of the public classes.\n\n## Troubleshooting\n\nIf you run into issues while using this library, please feel free to [file an issue](https://github.com/Azure/azure-sdk-for-js/issues/new).\n\n## Contributing\n\nIf you'd like to contribute to this library, please read the [contributing guide](https://github.com/Azure/azure-sdk-for-js/blob/main/CONTRIBUTING.md) to learn more about how to build and test the code.\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-js%2Fsdk%2Fcore%2Fcore-tracing%2FREADME.png)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2020 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@azure/core-tracing/-/core-tracing-1.0.0-preview.13.tgz#55883d40ae2042f6f1e12b17dd0c0d34c536d644",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@azure/core-tracing/-/core-tracing-1.0.0-preview.13.tgz",
    "hash": "55883d40ae2042f6f1e12b17dd0c0d34c536d644",
    "integrity": "sha512-KxDlhXyMlh2Jhj2ykX6vNEU0Vou4nHr025KoSEiz7cS3BNiHNaZcdECk/DmLkEB0as5T7b/TpRcehJ5yV6NeXQ==",
    "registry": "npm",
    "packageName": "@azure/core-tracing",
    "cacheIntegrity": "sha512-KxDlhXyMlh2Jhj2ykX6vNEU0Vou4nHr025KoSEiz7cS3BNiHNaZcdECk/DmLkEB0as5T7b/TpRcehJ5yV6NeXQ== sha1-VYg9QK4gQvbx4SsX3QwNNMU21kQ="
  },
  "registry": "npm",
  "hash": "55883d40ae2042f6f1e12b17dd0c0d34c536d644"
}