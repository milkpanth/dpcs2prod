{
  "manifest": {
    "name": "nestjs-azure-storage-blob",
    "version": "0.0.3",
    "dependencies": {
      "tslib": "^2.3.0"
    },
    "type": "commonjs",
    "main": "./src/index.js",
    "typings": "./src/index.d.ts",
    "keywords": [
      "nest",
      "nestjs",
      "storage",
      "sas",
      "blobSAS",
      "containerSAS",
      "accountSAS",
      "azure",
      "presigned url",
      "uplaod",
      "@azure/storage-blob",
      "@nest/azure-storage"
    ],
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-nestjs-azure-storage-blob-0.0.3-d5b68c0ef4c70782d2d1de08e300c2c6ad8a600e-integrity/node_modules/nestjs-azure-storage-blob/package.json",
    "readmeFilename": "README.md",
    "readme": "# nestjs-azure-storage-blob\n\nAzure Blob Storage module for Nest.js\n\n# Introduction\n\n- Nest.js with [@azure/storage-blob](https://www.npmjs.com/package/@azure/storage-blob)\n\n- [@nestjs/azure-storage](https://www.npmjs.com/package/@nestjs/azure-storage)\n  - does not provide the method to upload a file using presigned url\n  - does not provide multiple authentication methods\n  - does not provide method to upload files directly to Azure without passing through my server\n\n# Usage\n\n## Setup\n\n- Install packages\n\n```sh\nnpm install nestjs-azure-storage-blob @azure/storage-blob\n```\n\n- Set environment variables(`.env`)\n\n```sh\n# required\nNEST_STORAGE_BLOB_CONNECTION=\"DefaultEndpointsProtocol=https;AccountName=<ACCOUNT_NAME>;AccountKey=<ACCOUNT_KEY>;EndpointSuffix=core.windows.net\"\n\n# optional\nNEST_STORAGE_BLOB_CONTAINER=\"<CONTAINER_NAME>\"\n```\n\n### Option 1\n\n```ts\n// app.module.ts\n\nimport { Module } from '@nestjs/common';\nimport { StorageBlobModule } from 'nestjs-azure-storage-blob';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    StorageBlobModule.forRoot({\n      connection: process.env.NEST_STORAGE_BLOB_CONNECTION,\n      isGlobal: true, // optional\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n```\n\n### Option 2\n\n```ts\n// app.module.ts\n\nimport { Module } from '@nestjs/common';\nimport { StorageBlobModule } from 'nestjs-azure-storage-blob';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    StorageBlobModule.forRootAsync({\n      useFactory: () => ({\n        connection: process.env.NEST_STORAGE_BLOB_CONNECTION,\n      }),\n      isGlobal: true, // optional\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n```\n\n## Usage\n\n```ts\n// app.controller.ts\n\nimport { Controller, Get } from '@nestjs/common';\nimport { StorageBlobService } from 'nestjs-azure-storage-blob';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly storageBlobService: StorageBlobService) {}\n\n  @Get('/')\n  async getSas() {\n    const containerName = 'mycontainer';\n    const fileName = 'test.txt';\n    const expiresOn = new Date(new Date().getTime() + 1000 * 60 * 60 * 24);\n\n    const accountSasUrl = await this.storageBlobService.getAccountSasUrl();\n\n    const containerSasUrl = await this.storageBlobService.getContainerSasUrl(containerName);\n\n    const blobSasUrl = await this.storageBlobService.getBlockBlobSasUrl(\n      containerName,\n      fileName,\n      { add: true, create: true, read: true, delete: true },\n      { expiresOn },\n    );\n\n    return { accountSasUrl, containerSasUrl, blobSasUrl };\n  }\n}\n```\n\n```ts\n// Example 1. Upload file from server-side\n\n// Get Blob SAS URL which will be endpoint of uploading file\nconst res = await axios.get('https://<YOUR_SERVER>/block-blob-sas');\nconst blobSasUrl = res.data.blobSasUrl;\n\n// Upload a file directly to Azure Blob Storage which reduces the load on the server\nconst buffer = fs.readFileSync(path.join(process.cwd(), 'myimage.jpg'));\n\nif (buffer) {\n  await axios\n    // Do not use `FormData`\n    .put(blobSasUrl, buffer, {\n      headers: {\n        // Do not forget to set headers\n        'x-ms-blob-type': 'BlockBlob',\n      },\n    })\n    .then((res) => {\n      // 201 Created\n      console.log(res.status);\n    })\n    .catch((err: any) => {\n      console.error(err.message);\n    });\n}\n```\n\n```ts\n// Example 2. Upload file from browser-side\n\nconst onChange: ChangeEventHandler<HTMLInputElement> = async (ev) => {\n  const file = ev.file;\n\n  // Get Blob SAS URL which will be endpoint of uploading file\n  const res = await axios.get('https://<YOUR_SERVER>/block-blob-sas');\n  const blobSasUrl = res.data.blobSasUrl;\n\n  axios\n    // Do not use `FormData`\n    .put(blobSasUrl, file, {\n      headers: {\n        // Do not forget to set headers\n        'x-ms-blob-type': 'BlockBlob',\n      },\n    })\n    .then((res) => {\n      // 201 Created\n      console.log(res.status);\n    })\n    .catch((err: any) => {\n      console.error(err.message);\n    });\n};\n```\n\n# Contribution\n\n## Install\n\n```sh\n# to test locally\npnpm add link:./path/to/nestjs-azure-storage-blob\n```\n\n## Publish\n\n```sh\n# 2FA error occurs when using yarn on Windows machine\npnpm release\n```\n\n## Test\n\n```sh\n# set environment variable at `./example/.env.test`\nNEST_STORAGE_BLOB_CONNECTION=\"DefaultEndpointsProtocol=https;AccountName=<ACCOUNT_NAME>;AccountKey=<ACCOUNT_KEY>;EndpointSuffix=core.windows.net\"\nNEST_STORAGE_BLOB_CONTAINER=\"<CONTAINER_NAME>\"\n```\n\n# nestjs-azure-storage-blob\n",
    "description": "Azure Blob Storage module for Nest.js"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/nestjs-azure-storage-blob/-/nestjs-azure-storage-blob-0.0.3.tgz#d5b68c0ef4c70782d2d1de08e300c2c6ad8a600e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/nestjs-azure-storage-blob/-/nestjs-azure-storage-blob-0.0.3.tgz",
    "hash": "d5b68c0ef4c70782d2d1de08e300c2c6ad8a600e",
    "integrity": "sha512-NcmbkR+sW9xTH3L+EwNrRZrUgGiKwz0InPN8ssEbQFUs7CWAzVzEKT5GrbafnuxbbNUEhMnzlbH+ukneIncl5w==",
    "registry": "npm",
    "packageName": "nestjs-azure-storage-blob",
    "cacheIntegrity": "sha512-NcmbkR+sW9xTH3L+EwNrRZrUgGiKwz0InPN8ssEbQFUs7CWAzVzEKT5GrbafnuxbbNUEhMnzlbH+ukneIncl5w== sha1-1baMDvTHB4LS0d4I4wDCxq2KYA4="
  },
  "registry": "npm",
  "hash": "d5b68c0ef4c70782d2d1de08e300c2c6ad8a600e"
}