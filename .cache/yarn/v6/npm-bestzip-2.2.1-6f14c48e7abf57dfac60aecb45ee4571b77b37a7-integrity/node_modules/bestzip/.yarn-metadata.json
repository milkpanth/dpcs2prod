{
  "manifest": {
    "name": "bestzip",
    "version": "2.2.1",
    "description": "Uses OS zip command if avaliable (for better performance and speed) or node.js version if there is no system command avaliable. Can be called via node or command line.",
    "main": "lib/bestzip.js",
    "bin": {
      "bestzip": "bin/cli.js"
    },
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "lint": "eslint .",
      "lint-fix": "eslint --fix .",
      "unit-test": "jest",
      "test": "npm run lint && npm run unit-test"
    },
    "author": {
      "name": "Nathan Friedly - http://nfriedly.com/"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git@github.com:nfriedly/node-bestzip.git"
    },
    "homepage": "https://github.com/nfriedly/node-bestzip",
    "files": [
      "bin/cli.js",
      "lib/"
    ],
    "dependencies": {
      "archiver": "^5.3.0",
      "async": "^3.2.0",
      "glob": "^7.1.6",
      "which": "^2.0.2",
      "yargs": "^16.2.0"
    },
    "devDependencies": {
      "chai": "^4.3.4",
      "command-line-test": "^1.0.10",
      "eslint": "^7.22.0",
      "eslint-config-prettier": "^8.1.0",
      "eslint-plugin-prettier": "^3.3.1",
      "jest": "^26.6.3",
      "klaw-sync": "^6.0.0",
      "prettier": "^2.2.1",
      "regenerator-runtime": "^0.13.7",
      "rimraf": "^3.0.2",
      "unzip-stream": "^0.3.1"
    },
    "_registry": "npm",
    "_loc": "/home/dpcsdev/.cache/yarn/v6/npm-bestzip-2.2.1-6f14c48e7abf57dfac60aecb45ee4571b77b37a7-integrity/node_modules/bestzip/package.json",
    "readmeFilename": "readme.md",
    "readme": "# bestzip\n\n[![Build status](https://travis-ci.org/nfriedly/node-bestzip.svg?branch=master)](https://travis-ci.org/nfriedly/node-bestzip)\n[![npm version](https://badge.fury.io/js/bestzip.svg)](https://www.npmjs.com/package/bestzip)\n[![npm downloads](https://img.shields.io/npm/dm/bestzip)](https://www.npmjs.com/package/bestzip)\n\nThis module provides a `bestzip` command that calls the native `zip` command if available and otherwise falls back to a\nNode.js implementation.\n\nThe `--recurse-directories` (`-r`) option is automatically enabled.\n\n## Why?\n\nThe native `zip` command on GNU/Linux and macOS is significantly faster and creates moderately smaller .zip files than the Node.js version included here, but Windows has no built-in `zip` command. This module provides the best of both worlds, and allows for easier cross-platform scripting.\n\n## Global command line usage\n\n    npm install -g bestzip\n    bestzip destination.zip source/ [other sources...]\n\n## Command line usage within `package.json` scripts\n\n    npm install --save-dev bestzip\n\npackage.json:\n\n```javascript\n{\n    //...\n    \"scripts\": {\n        \"build\" \"...\",\n        \"zip\": \"bestzip bundle.zip build/*\",\n        \"upload\": \"....\",\n        \"deploy\": \"npm run build && npm run zip && npm run upload\"\n    }\n}\n```\n\n## Programmatic usage from within Node.js\n\n```javascript\nvar zip = require('bestzip');\n\nzip({\n  source: 'build/*',\n  destination: './destination.zip'\n}).then(function() {\n  console.log('all done!');\n}).catch(function(err) {\n  console.error(err.stack);\n  process.exit(1);\n});\n\n// v1.x API also works for backwards compatibility: zip(destination, sources, callback)\n```\n\n### Options\n\n* `source`: Path or paths to files and folders to include in the zip file. String or Array of Strings.\n* `destination`: Path to generated .zip file.\n* `cwd`: Set the Current Working Directory that source and destination paths are relative to. Defaults to `process.cwd()`\n\n## How to control the directory structure\n\nThe directory structure in the .zip is going to match your input files, but the exact details depend on how the command is called. For example:\n\n`bestzip build.zip build/*`\n\nThis includes the build/ folder inside of the .zip\n\nAlternatively:\n\n`cd build/ && bestzip ../build.zip *`\n\nThis will not include the build/ folder, it's contents will be top-level.\n\n*Note: some tools, including the Archive Utility built into macOS, will automatically create a top-level folder to group everything together when extracting a .zip archive that contains multiple top-level files.*\n\nWhen using the programmatic API, the same effect may be achieved by passing in the `cwd` option.\n\n## .dotfiles\n\nWildcards (`*`) ignore dotfiles.\n\n* To include a dotfile, either include the directory it's in (`folder/`) or include it by name (`folder/.dotfile)`\n* To omit dotfiles, either use a wildcard (`folder/*`) or explicitly list the desired files (`folder/file1.txt folder/file2.txt`)\n\n## Breaking changes for v2\n\n* `bestzip output.zip foo/bar/file.txt` now includes the foo/bar/ folders, previously it would place file.txt at the top-level\n  * This was done to more closely align with the native zip command\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Nathan Friedly - http://nfriedly.com/\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/bestzip/-/bestzip-2.2.1.tgz#6f14c48e7abf57dfac60aecb45ee4571b77b37a7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/bestzip/-/bestzip-2.2.1.tgz",
    "hash": "6f14c48e7abf57dfac60aecb45ee4571b77b37a7",
    "integrity": "sha512-XdAb87RXqOqF7C6UgQG9IqpEHJvS6IOUo0bXWEAebjSSdhDjsbcqFKdHpn5Q7QHz2pGr3Zmw4wgG3LlzdyDz7w==",
    "registry": "npm",
    "packageName": "bestzip",
    "cacheIntegrity": "sha512-XdAb87RXqOqF7C6UgQG9IqpEHJvS6IOUo0bXWEAebjSSdhDjsbcqFKdHpn5Q7QHz2pGr3Zmw4wgG3LlzdyDz7w== sha1-bxTEjnq/V9+sYK7LRe5Fcbd7N6c="
  },
  "registry": "npm",
  "hash": "6f14c48e7abf57dfac60aecb45ee4571b77b37a7"
}